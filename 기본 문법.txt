이 문서는 대회에서 사용하는 몇몇 문법들에 대해 다룰 예정입니다. 수시로 내용이 변경될 수 있습니다.

<기본>

#include<bits/stdc++.h>
// c++ 에서 지원하는 모든 표준 헤더를 모아놓은 헤더, 즉 이 헤더를 선언하면 다른 헤더를 추가로 선언해줄 필요가 없다.
// 대신 max와 min 같은 몇몇 변수 이름을 사용할 수 없다. (함수 이름과 같은 변수 이름 선언 불가능)

ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
// cin cout 고속화, 많은 양의 입력이나 출력이 필요할 때 반 필수로 사용하는 것이 좋다.
// 대신 scanf, printf 와 같은 stdio.h 에서의 입출력 함수를 사용할 수 없다.

using namespace std;
// c++ 헤더에서 기본적으로 함수 앞에 붙는 "std::" 를 생략시킬 수 있다. 
// "std::cin" -> "cin" / "std::sort" -> "sort" 

using ll = long long;
// long long 대신 ll 역시 long long과 같은 의미를 가지게 하는 코드
// using pii = pair<int,int>; 와 같이 긴 자료형 이름을 코드에서 줄여서 사용하고 싶을 때 사용할 수 있다.



<자료형>
// 자료형에 관련한 내용은 추가로 검색 밑 조사하여 내부 함수나 기능을 알아볼 것을 추천한다.

배열
// 크기가 큰 배열의 경우 main() 밖에 전역변수로 선언할 것. 전역변수로 선언하면 초기값이 0으로 초기화되는 등 이점이 있다.

string 
// 문자열

vector<자료형>
// 벡터 : 크기를 조절 가능한 일차원 배열

pair<자료형, 자료형>
// 페어 : 두 개의 자료형을 묶어 하나의 자료형으로 사용하고 싶을 때 사용

queue<자료형> , stack<자료형> , deque<자료형>
// 큐, 스택, 덱 : 자세한 내용은 인터넷 참고

prioirty_queue<자료형>
// 우선순위 큐 : 기본 설정은 최대값 pop, 만약 최소값을 관리하는 우선순위 큐를 만들고 싶다면 다음과 같이 선언하면 된다.
// priority_queue<자료형, vector<자료형>, greater<자료형>>

set<자료형>, map<자료형, 자료형>
// 셋, 맵 : 자세한 내용은 인터넷 참고



<반복문>

0-Base : 시작 인덱스를 0번부터 하는 인덱싱 방법

for(int i=0; i<n; i++) // i는 0부터 n-1까지
for(int i=n-1; i>=0; i--) // i는 n-1부터 0까지

1-Base : 시작 인덱스를 1번부터 하는 인덱싱 방법
for(int i=1; i<=n; i++) // i는 1부터 n까지
for(int i=n; i>0; i--) 또는 for(int i=n; i; i--) // i는 n부터 1까지

for(자료형 i:자료구조) (예시: for(long long i: v) //v는 vector<long long>)
// 자료구조에서 자료를 하나씩 꺼내 i에 넣으면서 반복문

<잡다한 팁>
1. min({a,b,c,d,e}) max({a,b,c,d}) 와 같이 3개 이상의 값의 최대값/최소값을 구할 수 있다.
2. 아스키코드에서 '0'은 48, 'A'는 65, 'a'는 97의 값을 가진다.
